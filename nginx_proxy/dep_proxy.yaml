# configMap 적용 후 해당 파일 적용 시킬것.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-proxy
  namespace: zoochacha
  labels:
    app: nginx-proxy
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx-proxy
  template:
    metadata:
      labels:
        app: nginx-proxy
    spec:
      containers:
        - name: nginx
          image: nginx:latest
          ports:
            - containerPort: 80
            - containerPort: 443
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
            - name: nginx-tls
              mountPath: /etc/nginx/ssl
      volumes:
        - name: nginx-config
          configMap:
            name: nginx-config
        - name: nginx-tls
          secret:
            secretName: nginx-tls
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-loadbalancer
  namespace: zoochacha
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: "ip"
    service.beta.kubernetes.io/aws-load-balancer-proxy-protocol: "*"
    service.beta.kubernetes.io/aws-load-balancer-connection-idle-timeout: "60"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
  labels:
    app: nginx-proxy
spec:
  type: LoadBalancer
  selector:
    app: nginx-proxy
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
      name: http
    - protocol: TCP
      port: 443
      targetPort: 443  # 443 포트로 들어오는 트래픽을 nginx의 443 포트로 전달
      name: https